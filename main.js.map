{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/animations.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/model.service.ts","webpack:///./src/app/predict-page/predict-page.component.css","webpack:///./src/app/predict-page/predict-page.component.html","webpack:///./src/app/predict-page/predict-page.component.ts","webpack:///./src/app/train-page/train-page.component.css","webpack:///./src/app/train-page/train-page.component.html","webpack:///./src/app/train-page/train-page.component.ts","webpack:///./src/app/webcam-service.service.ts","webpack:///./src/app/webcam.js","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {\r\n    trigger,\r\n    animate,\r\n    transition,\r\n    style,\r\n    query\r\n  } from '@angular/animations';\r\n\r\n  export const fadeAnimation = trigger('fadeAnimation', [\r\n    transition('* => *', [\r\n      query(\r\n        ':enter',\r\n        [style({ opacity: 0 })],\r\n        { optional: true }\r\n      ),\r\n      query(\r\n        ':leave',\r\n        [style({ opacity: 1 }), animate('0.3s', style({ opacity: 0 }))],\r\n        { optional: true }\r\n      ),\r\n      query(\r\n        ':enter',\r\n        [style({ opacity: 0 }), animate('0.3s', style({ opacity: 1 }))],\r\n        { optional: true }\r\n      )\r\n    ])\r\n  ]);\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { TrainPageComponent } from './train-page/train-page.component';\r\nimport { PredictPageComponent } from './predict-page/predict-page.component';\r\n\r\nconst routes: Routes = [\r\n    {path: '', component: TrainPageComponent},\r\n    {path: 'train', component: TrainPageComponent},\r\n    {path: 'predict',  component: PredictPageComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\nexport const RoutingComponents = [TrainPageComponent, PredictPageComponent];\r\n","module.exports = \"/* router-outlet ~ * {\\r\\n    position: absolute;\\r\\n    height: 100vh;\\r\\n    width: 100vh;\\r\\n  } */\\r\\n\"","module.exports = \"<main [@fadeAnimation]=\\\"o.isActivated ? o.activatedRoute : ''\\\">\\r\\n        <router-outlet #o=\\\"outlet\\\"></router-outlet>\\r\\n</main>\"","import { Component,  OnInit } from '@angular/core';\nimport { fadeAnimation } from './animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  animations: [fadeAnimation] // register the animation\n})\nexport class AppComponent {\n  // model: tf.Model;\n  // predictions: any;\n\n  // ngOnInit() {\n  //   this.loadModel();\n  // }\n\n  // async loadModel() {\n  //   this.model = await tf.loadModel('https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_0.25_224/model.json');\n  // }\n\n  // // async capture() {\n  // //  tf.tidy() => {\n  // // //     // Capture the frame from the webcam.\n  // //     const img = webcam.capture();\n  // //     this.predict(img);\n\n  // //   }\n  // // }\n\n  // async predict(imageData: ImageData) {\n\n  //   await tf.tidy(() => {\n\n  //     // Convert the canvas pixels to a Tensor of the matching shape\n  //     let img = tf.fromPixels(imageData, 1);\n  //     img = img.reshape([224, 244, 3]);\n  //     img = tf.cast(img, 'float32');\n\n  //     // Make and format the predications\n  //     const output = this.model.predict(img) as any;\n\n  //     // Save predictions on the component\n  //     this.predictions = Array.from(output.dataSync());\n  //   });\n\n  // }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RoutingComponents } from './app-routing.module';\n\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { ModelService } from './model.service';\nimport { FormsModule } from '../../node_modules/@angular/forms';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoutingComponents,\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    HttpModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [ModelService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport * as tf from '@tensorflow/tfjs';\nimport { Webcam } from './webcam';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n  labels = [];\n  modelPredict;\n  isTraining = false;\n  predictions: any;\n  mobilenet;\n  numClasses =  4;\n  controllerDataset: any;\n  webcam: Webcam;\n  xs: any;\n  ys: any;\n  optimizer = tf.train.adam(0.0001);\n  batchSize;\n  counter = 0;\n  model = tf.sequential({\n    layers: [\n      tf.layers.flatten({inputShape: [7, 7, 256]}),\n      tf.layers.dense({\n        units: 100,\n        activation: 'relu',\n        kernelInitializer: 'varianceScaling',\n        useBias: true\n      }),\n      tf.layers.dense({\n        units: this.numClasses,\n        kernelInitializer: 'varianceScaling',\n        useBias: false,\n        activation: 'softmax'\n      })\n    ]\n  });\n\n  constructor() {\n    this.webcam = new Webcam(<HTMLVideoElement> document.getElementById('vid1'));\n  }\n\n  async loadMobilenet() {\n    const mobilenet = await tf.loadModel(\n        'https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_0.25_224/model.json'\n      );\n    const layer = mobilenet.getLayer('conv_pw_13_relu');\n    this.mobilenet = tf.model({inputs: mobilenet.inputs, outputs: layer.output});\n  }\n\n  getLabels(labels: string[]) {\n    this.labels = labels;\n  }\n\n  resetData() {\n    this.labels = ['label1', 'label2', 'label3', 'label4'];\n    this.model = undefined;\n    this.xs = null;\n    this.ys = null;\n  }\n\n  newSample(label: number, id) {\n    let targetCanvas = '';\n    const newLabe = document.getElementById('card1').getElementsByTagName('input');\n    switch (label) {\n      case 0:\n        targetCanvas = 'label1';\n        break;\n      case 1:\n        targetCanvas = 'label2';\n        break;\n      case 2:\n        targetCanvas = 'label3';\n        break;\n      case 3:\n        targetCanvas = 'label4';\n        break;\n    }\n    tf.tidy(() => {\n      if (this.mobilenet === undefined ) {\n        this.alertNoInternet();\n      } else {\n        const canvas = <HTMLCanvasElement> document.getElementById(targetCanvas);\n     const myVideo = <HTMLVideoElement> document.getElementById(id);\n     const img = this.capture(myVideo);\n     this.draw(img, canvas);\n     const example = this.mobilenet.predict(img);\n     this.addData(example, label);\n      }\n    });\n\n  }\n\n  alertNoInternet() {\n   alert('Please check internet connection');\n  }\n\n  capture(video) {\n    return tf.tidy(() => {\n      const webcamImage = tf.fromPixels(video);\n      const croppedImage = this.cropImage(webcamImage);\n      const batchedImage = croppedImage.expandDims(0);\n      return batchedImage.toFloat().div(tf.scalar(127)).sub(tf.scalar(1));\n    });\n  }\n\n\n  addData(example, label) {\n    const y = tf.tidy(\n     () => tf.oneHot(tf.tensor1d([label]).toInt(), this.numClasses));\n\n    if (this.xs == null) {\n      this.xs = tf.keep(example);\n      this.ys = tf.keep(y);\n    } else {\n      const oldX = this.xs;\n      this.xs = tf.keep(oldX.concat(example, 0));\n\n      const oldY = this.ys;\n      this.ys = tf.keep(oldY.concat(y, 0));\n\n      oldX.dispose();\n      oldY.dispose();\n      y.dispose();\n    }\n  }\n\n\n  classify(id) {\n    const myVideo = <HTMLVideoElement> document.getElementById(id);\n\n    const captured = tf.tidy(() => {\n      const webcamImage = tf.fromPixels(myVideo);\n      const croppedImage = this.cropImage(webcamImage);\n      const batchedImage = croppedImage.expandDims(0);\n      return batchedImage.toFloat().div(tf.scalar(127)).sub(tf.scalar(1));\n    });\n\n    tf.tidy(() => {\n      this.predict(captured) ;\n    });\n  }\n\n  cropImage(img) {\n    const size = Math.min(img.shape[0], img.shape[1]);\n    const centerHeight = img.shape[0] / 2;\n    const beginHeight = centerHeight - (size / 2);\n    const centerWidth = img.shape[1] / 2;\n    const beginWidth = centerWidth - (size / 2);\n    return img.slice([beginHeight, beginWidth, 0], [224, 224, 3]);\n  }\n\n  async draw(image, canvas) {\n    const [width, height] = [224, 224];\n    const ctx = canvas.getContext('2d');\n    const imageData = new ImageData(width, height);\n    const data = image.dataSync();\n    for (let i = 0; i < height * width; ++i) {\n      const j = i * 4;\n      imageData.data[j + 0] = (data[i * 3 + 0] + 1) * 127;\n      imageData.data[j + 1] = (data[i * 3 + 1] + 1) * 127;\n      imageData.data[j + 2] = (data[i * 3 + 2] + 1) * 127;\n      imageData.data[j + 3] = 255;\n    }\n    ctx.putImageData(imageData, 0, 0);\n  }\n\n  async train() {\n    if (this.xs == null) {\n      throw new Error('Add some examples before training!');\n    }\n\n    this.model = tf.sequential({\n      layers: [\n        tf.layers.flatten({inputShape: [7, 7, 256]}),\n        tf.layers.dense({\n          units: 100,\n          activation: 'relu',\n          kernelInitializer: 'varianceScaling',\n          useBias: true\n        }),\n        tf.layers.dense({\n          units: this.numClasses,\n          kernelInitializer: 'varianceScaling',\n          useBias: false,\n          activation: 'softmax'\n        })\n      ]\n    });\n    const optimizer = tf.train.adam(0.0001);\n    this.model.compile({optimizer: optimizer, loss: 'categoricalCrossentropy', metrics: ['accuracy']});\n    const batchSize =\n        Math.floor(this.xs.shape[0] * 0.4);\n    if (!(batchSize > 0)) {\n      throw new Error(\n          `Batch size is 0 or NaN. Please choose a non-zero fraction.`);\n    }\n    this.model.fit(this.xs, this.ys, {\n      batchSize,\n      epochs: 20,\n      callbacks: {\n        onTrainBegin: async() => {\n          this.isTraining = true;\n        },\n        onTrainEnd: async () => {\n          this.isTraining = false;\n        }\n      }\n    });\n  }\n\n   async predict(imageData) {\n     if (this.mobilenet === undefined) {\n         this.alertNoInternet();\n     } else {\n      await tf.tidy(() => {\n         let img = imageData;\n         img = img.reshape([1, 224, 224, 3]);\n         img = tf.cast(img, 'float32'); // explain this\n         const activation = this.mobilenet.predict(img);\n         const output = this.model.predict(activation) as any;\n         this.predictions = Array.from(output.dataSync());\n         const predicted = Math.max.apply(Math, this.predictions);\n         const classification = this.labels[this.predictions.indexOf(predicted)];\n         document.getElementById('classification').innerHTML = classification;\n         const msg = new SpeechSynthesisUtterance(classification);\n         window.speechSynthesis.speak(msg);\n       });\n     }\n  }\n\n}\n","module.exports = \"#container {\\r\\n    height: 78.3vh;\\r\\n    width: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    flex-wrap: wrap;    \\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\nnav, footer {\\r\\n    height: 10vh;\\r\\n}\\r\\n\\r\\nnav {\\r\\n    padding-top: 1rem;\\r\\n    text-align: center;\\r\\n    font-size: 3 rem;\\r\\n    background: linear-gradient(#4A96E8,#05E3D8);\\r\\n}\\r\\n\\r\\nnav p {\\r\\n    margin: 1rem;\\r\\n    color: white;\\r\\n    font-size: 3rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n    background: #EBEBEB;\\r\\n}\\r\\n\\r\\n#retrain {\\r\\n    float: left;\\r\\n    font-size: 3rem;\\r\\n    height: 100%;\\r\\n    color: white;\\r\\n    font-weight: bolder;\\r\\n    background: linear-gradient(to bottom right, #4A96E8,#05E3D8);\\r\\n   \\r\\n}\\r\\n\\r\\nmat-card {\\r\\n    color: black;\\r\\n    padding: 0%;\\r\\n    width: 360px;\\r\\n    height: 27rem;\\r\\n    border-radius: 25px;\\r\\n}\\r\\n\\r\\nmat-card img {\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\nmat-card h1 {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#container button {\\r\\n    font-size: 3rem;\\r\\n    padding: 1rem;\\r\\n    margin: 2rem;\\r\\n}\\r\\n\\r\\n#videoCanvas {\\r\\n    height: 360px;\\r\\n    width: 360px;\\r\\n}\"","module.exports = \"<nav>\\n    <p>\\n      Test Your Trained ML Model\\n    <p>\\n</nav>\\n  <div id=\\\"container\\\" >\\n    <mat-card>\\n      <video id=\\\"webcam\\\" #videoElement style=\\\"display:none\\\" height=\\\"240px\\\" width=\\\"320px\\\"></video>\\n      <canvas id=\\\"videoCanvas\\\" height=\\\"224px\\\" width=\\\"224px\\\"></canvas>\\n      <h1 id=\\\"classification\\\"></h1>\\n    </mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"_modelService.classify('webcam')\\\">PREDICT</button>\\n  </div>\\n<footer>\\n    <button mat-button id=\\\"retrain\\\" routerLink='/train' (click)=\\\"_modelService.resetData()\\\">Retrain Model</button>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as tf from '@tensorflow/tfjs';\nimport { ViewChild } from '@angular/core';\n// import { LabelsList } from './labels';\nimport { ModelService } from '../model.service';\nimport { WebcamServiceService } from '../webcam-service.service';\n\n\n@Component({\n  selector: 'app-predict-page',\n  templateUrl: './predict-page.component.html',\n  styleUrls: ['./predict-page.component.css']\n})\n\n\nexport class PredictPageComponent implements OnInit {\n\n   @ViewChild('videoElement') videoElement: any;\n   video: any;\n\n   constructor(private _modelService: ModelService, private _webcamService: WebcamServiceService ) {\n     this._webcamService.setTarget('videoCanvas', 'webcam');\n   }\n\n   ngOnInit() {\n    this.initCamera();\n     this.video = this.videoElement.nativeElement;\n     this._webcamService.startWebCam();\n     // this._modelService.loadModel();\n   }\n\n   initCamera() {\n     const config = { video: true, audio: false };\n     const browser = <any>navigator;\n\n     browser.getUserMedia = (browser.getUserMedia ||\n       browser.webkitGetUserMedia ||\n       browser.mozGetUserMedia ||\n       browser.msGetUserMedia);\n\n     browser.mediaDevices.getUserMedia(config).then(stream => {\n       this.video.srcObject = stream;\n       this.video.play();\n     });\n   }\n\n//    startWebCam() {\n//     document.onreadystatechange = () => {\n//      if (document.readyState === 'complete') {\n//        this.drawVideo2Canvas();\n//      } else {\n//        this.startWebCam();\n//      }\n//    };\n//   }\n\n//   drawVideo2Canvas(targetCanvas, targetVideo) {\n//    const canvas = <HTMLCanvasElement> document.getElementById('videoCanvas');\n//    const myVideo = <HTMLVideoElement> document.getElementById('webcam');\n//    const img = this._modelService.capture(myVideo);\n//    this._modelService.draw(img, canvas);\n//    requestAnimationFrame(this.drawVideo2Canvas.bind(this));\n//    img.dispose();\n//  }\n\n\n}\n","module.exports = \"#container {\\r\\n    height: 78.3vh;\\r\\n    width: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-content: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\nnav {\\r\\n    padding-top: 1rem;\\r\\n    height: 10vh;\\r\\n    font-size: 3 rem;\\r\\n    text-align: center;\\r\\n    background: linear-gradient(#3EE33E, #BBE305)\\r\\n}\\r\\n\\r\\nnav p {\\r\\n    margin: 1rem;\\r\\n    color: white;\\r\\n    font-size: 3rem;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n    background: #EBEBEB;\\r\\n    height: 10vh;\\r\\n}\\r\\n\\r\\n#train-cards {\\r\\n    width: 100%;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: space-around;\\r\\n}\\r\\n\\r\\n#train-cards p{\\r\\n    width: 100%;\\r\\n    padding: 0%;\\r\\n    margin: 0%;\\r\\n    background: #EBEBEB;\\r\\n}\\r\\n\\r\\n#videoCard {\\r\\n    padding: 0%;\\r\\n    margin: 0%;\\r\\n    height: 224px;\\r\\n    width: 224px;\\r\\n    background: white;\\r\\n}\\r\\n\\r\\n#train {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    align-content: center;\\r\\n    justify-content: center;  \\r\\n    margin-top: 1rem; \\r\\n}\\r\\n\\r\\n#train img {\\r\\n   padding: 0%; \\r\\n}\\r\\n\\r\\n/* #train button {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    font-size: 4rem;   \\r\\n    padding: 1 rem;\\r\\n} */\\r\\n\\r\\n#accuracy {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#toPredict {\\r\\n    float: right;\\r\\n    font-size: 3rem;\\r\\n    height: 100%;\\r\\n    color: white;\\r\\n    font-weight: bolder;\\r\\n    background: linear-gradient(to bottom right, #3EE33E, #BBE305);\\r\\n   \\r\\n}\\r\\n\\r\\n#train-cards mat-card {\\r\\n    margin-top: 1rem;\\r\\n    background: #BBE305;\\r\\n    border-top-left-radius: 2rem;\\r\\n    position: relative;\\r\\n    padding-left: 0%;\\r\\n    padding-right: 0%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding-bottom: 0%;\\r\\n  }\\r\\n\\r\\n#train-cards mat-card p {\\r\\n    text-align: center;\\r\\n    background: white;\\r\\n    font-size: 1.5rem;\\r\\n}\\r\\n\\r\\nmat-card button {\\r\\n    margin-top:1.8rem;\\r\\n    height: 224px;\\r\\n    width: 224px;\\r\\n    position: absolute;\\r\\n    z-index: 2;\\r\\n    background: rgba(225, 225, 225, 0.5)\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n    margin: 1rem 0 0 0;\\r\\n}\\r\\n\\r\\ncanvas {\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    height: 1.5rem;\\r\\n}\\r\\n\"","module.exports = \"<nav>\\n    <p>\\n        Transfer Learning\\n      <p>\\n</nav>\\n<div id=\\\"container\\\" > \\n  \\n <div id=\\\"train-cards\\\">\\n    <mat-card id='card1'>\\n      <mat-card-header><input type='text' placeholder=\\\"Label 1\\\" [(ngModel)]=\\\"labels[0]\\\"/></mat-card-header>\\n      <canvas id=\\\"label1\\\" height=\\\"224px\\\" width=\\\"224px\\\" (click)=\\\"addNewSample('card1')\\\"></canvas>\\n      <button mat-raised-button (click)=\\\"startAdding('card1')\\\" *ngIf='showAddButton.card1; else preview1'>Click to start adding examples</button>\\n      <p>{{numOfExamplesList[0]}} examples</p>\\n    </mat-card>\\n    <mat-card id=\\\"card2\\\">\\n      <mat-card-header><input type='text' placeholder=\\\"Label 2\\\" [(ngModel)]=\\\"labels[1]\\\"/></mat-card-header>\\n      <canvas id=\\\"label2\\\" height=\\\"224px\\\" width=\\\"224px\\\" (click)=\\\"addNewSample('card2')\\\"></canvas>\\n      <button mat-raised-button (click)=\\\"startAdding('card2')\\\" *ngIf=\\\"showAddButton.card2\\\">Click to start adding examples</button>\\n      <p>{{numOfExamplesList[1]}} examples</p>\\n    </mat-card>\\n    <mat-card id=\\\"card3\\\">\\n      <mat-card-header><input type='text' placeholder=\\\"Label 3\\\" [(ngModel)]=\\\"labels[2]\\\"/></mat-card-header>\\n      <canvas id=\\\"label3\\\" height=\\\"224px\\\" width=\\\"224px\\\" (click)=\\\"addNewSample('card3')\\\"></canvas>\\n      <button mat-raised-button (click)=\\\"startAdding('card3')\\\" *ngIf=\\\"showAddButton.card3\\\">Click to start adding examples</button>\\n      <p>{{numOfExamplesList[2]}} examples</p>\\n    </mat-card>\\n    <mat-card id=\\\"card4\\\">\\n      <mat-card-header><input type='text' placeholder=\\\"Label 4\\\" [(ngModel)]=\\\"labels[3]\\\"/></mat-card-header>\\n      <canvas id=\\\"label4\\\" height=\\\"224px\\\" width=\\\"224px\\\" (click)=\\\"addNewSample('card4')\\\"></canvas>\\n      <button mat-raised-button (click)=\\\"startAdding('card4')\\\" *ngIf=\\\"showAddButton.card4\\\">Click to start adding examples</button>\\n      <p>{{numOfExamplesList[3]}} examples</p>\\n    </mat-card>\\n </div>\\n\\n <div id=\\\"train\\\">\\n   <button mat-raised-button (click)=\\\"prepTrain()\\\" >\\n      <div *ngIf=\\\"_modelService.isTraining===false\\\">\\n          <img src=\\\"/assets/train_btn.svg\\\" alt=\\\"retrain_button\\\">\\n          <h1>TRAIN</h1>\\n      </div>\\n      <mat-spinner [diameter]=\\\"80\\\" *ngIf=\\\"_modelService.isTraining===true\\\"></mat-spinner>\\n   </button>\\n   \\n   <div>\\n    <video id=\\\"vid1\\\" #videoElement style=\\\"display:none\\\"  height=\\\"224px\\\" width=\\\"298.6666667px\\\"></video>\\n    <mat-card id=\\\"videoCard\\\"><canvas id=\\\"videoCanvas\\\" height=\\\"224px\\\" width=\\\"224px\\\"></canvas></mat-card>\\n   </div>\\n </div>\\n\\n \\n\\n</div>\\n<footer>\\n  <button mat-button id=\\\"toPredict\\\" routerLink='/predict'>Test Prediction</button>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { ModelService } from '../model.service';\nimport { WebcamServiceService } from '../webcam-service.service';\n\n@Component({\n  selector: 'app-train-page',\n  templateUrl: './train-page.component.html',\n  styleUrls: ['./train-page.component.css']\n})\nexport class TrainPageComponent implements OnInit {\n\n  labels = ['label1', 'label2', 'label3', 'label4'];\n  showAddButton = {card1: true, card2: true, card3: true, card4: true};\n  numOfExamplesList = [0, 0, 0, 0];\n\n  @ViewChild('videoElement') videoElement: any;\n  video: any;\n  constructor(private _modelService: ModelService, private _webcamService: WebcamServiceService) {\n    this._webcamService.setTarget('videoCanvas', 'vid1');\n\n  }\n\n\n\n  ngOnInit() {\n    this.initCamera();\n    this.video = this.videoElement.nativeElement;\n    this._webcamService.startWebCam();\n    this._modelService.loadMobilenet();\n  }\n\n  initCamera() {\n    const config = { video: true, audio: false };\n    const browser = <any>navigator;\n\n    browser.getUserMedia = (browser.getUserMedia ||\n      browser.webkitGetUserMedia ||\n      browser.mozGetUserMedia ||\n      browser.msGetUserMedia);\n\n    browser.mediaDevices.getUserMedia(config).then(stream => {\n      this.video.srcObject = stream;\n      this.video.play();\n    });\n  }\n\n  startAdding(card: string) {\n    this.addNewSample(card);\n    this.showAddButton[card] = false;\n  }\n\n  addNewSample(card) {\n    const updateExamples = document.getElementById(card).getElementsByTagName('p')[0].textContent;\n   if (this._modelService.mobilenet !== undefined ) {\n    switch (card) {\n      case 'card1':\n        this._modelService.newSample(0, 'vid1');\n        this.numOfExamplesList[0] += 1;\n        break;\n      case 'card2':\n        this._modelService.newSample(1, 'vid1');\n        this.numOfExamplesList[1] += 1;\n        break;\n      case 'card3':\n        this._modelService.newSample(2, 'vid1');\n        this.numOfExamplesList[2] += 1;\n        break;\n      case 'card4':\n        this._modelService.newSample(3, 'vid1');\n        this.numOfExamplesList[3] += 1;\n        break;\n     }\n    } else {\n      this._modelService.alertNoInternet();\n    }\n  }\n\n  hide(id) {\n     const elem = document.getElementById(id);\n     elem.style.display = 'none';\n     const vidID = 'vid' + id;\n     document.getElementById(vidID).style.display = 'block';\n  }\n\n  prepTrain() {\n    this._modelService.getLabels(this.labels);\n    this._modelService.train().catch((err) => alert(err));\n  }\n\n  stopWebcamNow() {\n    this.video.stop();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ModelService } from './model.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebcamServiceService {\n  targetCanvas;\n  targetVideo;\n  constructor(private _modelService: ModelService) { }\n\n\n  setTarget(targetCanvas, targetVideo) {\n    console.log('setting target');\n    this.targetCanvas = targetCanvas;\n    this.targetVideo = targetVideo;\n  }\n\n  startWebCam() {\n    document.onreadystatechange = () => {\n      if (document.readyState === 'complete') {\n        this.drawVideo2Canvas();\n      }\n    };\n    if (document.readyState === 'complete') {\n       this.drawVideo2Canvas();\n    }\n  }\n\n  drawVideo2Canvas() {\n    const canvas = <HTMLCanvasElement> document.getElementById(this.targetCanvas);\n    const video = <HTMLVideoElement> document.getElementById(this.targetVideo);\n     const img = this._modelService.capture(video);\n     this._modelService.draw(img, canvas);\n   requestAnimationFrame(this.drawVideo2Canvas.bind(this));\n   img.dispose();\n }\n\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as tf from '@tensorflow/tfjs';\n\n/**\n * A class that wraps webcam video elements to capture Tensor4Ds.\n */\nexport class Webcam {\n  /**\n   * @param {HTMLVideoElement} webcamElement A HTMLVideoElement representing the webcam feed.\n   */\n  constructor(webcamElement) {\n    this.webcamElement = webcamElement;\n  }\n\n  /**\n   * Captures a frame from the webcam and normalizes it between -1 and 1.\n   * Returns a batched image (1-element batch) of shape [1, w, h, c].\n   */\n  capture() {\n    return tf.tidy(() => {\n      // Reads the image as a Tensor from the webcam <video> element.\n      const webcamImage = tf.fromPixels(this.webcamElement);\n\n      // Crop the image so we're using the center square of the rectangular\n      // webcam.\n      const croppedImage = this.cropImage(webcamImage);\n\n      // Expand the outer most dimension so we have a batch size of 1.\n      const batchedImage = croppedImage.expandDims(0);\n\n      // Normalize the image between -1 and 1. The image comes in between 0-255,\n      // so we divide by 127 and subtract 1.\n      return batchedImage.toFloat().div(tf.scalar(127)).sub(tf.scalar(1));\n    });\n  }\n\n  /**\n   * Crops an image tensor so we get a square image with no white space.\n   * @param {Tensor4D} img An input image Tensor to crop.\n   */\n  cropImage(img) {\n    const size = Math.min(img.shape[0], img.shape[1]);\n    const centerHeight = img.shape[0] / 2;\n    const beginHeight = centerHeight - (size / 2);\n    const centerWidth = img.shape[1] / 2;\n    const beginWidth = centerWidth - (size / 2);\n    return img.slice([beginHeight, beginWidth, 0], [size, size, 3]);\n  }\n\n  /**\n   * Adjusts the video size so we can make a centered square crop without\n   * including whitespace.\n   * @param {number} width The real width of the video element.\n   * @param {number} height The real height of the video element.\n   */\n  adjustVideoSize(width, height) {\n    const aspectRatio = width / height;\n    if (width >= height) {\n      this.webcamElement.width = aspectRatio * this.webcamElement.height;\n    } else if (width < height) {\n      this.webcamElement.height = this.webcamElement.width / aspectRatio;\n    }\n  }\n\n  async setup() {\n    return new Promise((resolve, reject) => {\n      const navigatorAny = navigator;\n      navigator.getUserMedia = navigator.getUserMedia ||\n          navigatorAny.webkitGetUserMedia || navigatorAny.mozGetUserMedia ||\n          navigatorAny.msGetUserMedia;\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia(\n            {video: true},\n            stream => {\n              this.webcamElement.srcObject = stream;\n              this.webcamElement.addEventListener('loadeddata', async () => {\n                this.adjustVideoSize(\n                    this.webcamElement.videoWidth,\n                    this.webcamElement.videoHeight);\n                resolve();\n              }, false);\n            },\n            error => {\n              reject();\n            });\n      } else {\n        reject();\n      }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}